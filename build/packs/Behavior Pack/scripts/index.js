import*as e from"@minecraft/server-editor";import*as t from"@minecraft/server";var o={d:(e,t)=>{for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const n=(e=>{var t={};return o.d(t,e),t})({ActionTypes:()=>e.ActionTypes,CursorControlMode:()=>e.CursorControlMode,CursorTargetMode:()=>e.CursorTargetMode,EditorInputContext:()=>e.EditorInputContext,EditorStatusBarAlignment:()=>e.EditorStatusBarAlignment,InputModifier:()=>e.InputModifier,KeyboardKey:()=>e.KeyboardKey,MouseActionType:()=>e.MouseActionType,MouseInputType:()=>e.MouseInputType,bindDataSource:()=>e.bindDataSource,executeLargeOperation:()=>e.executeLargeOperation,registerEditorExtension:()=>e.registerEditorExtension});const i=(e=>{var t={};return o.d(t,e),t})({BlockPermutation:()=>t.BlockPermutation,BlockStates:()=>t.BlockStates,BlockTypes:()=>t.BlockTypes,BlockVolumeUtils:()=>t.BlockVolumeUtils,BoundingBoxUtils:()=>t.BoundingBoxUtils,CompoundBlockVolumeAction:()=>t.CompoundBlockVolumeAction,Vector:()=>t.Vector,WeatherType:()=>t.WeatherType,system:()=>t.system});class r{constructor(e,t,o,n){this.red=e,this.green=t,this.blue=o,this.alpha=n}}const a=e=>"string"==typeof e?e:"object"==typeof e&&null!==e&&"message"in e?e.message:"Unknown exception";class s{constructor(){this.positions=new Map}add(e){this.positions.set(this.getKey(e),!0),this.updateBounds(e)}remove(e){this.positions.delete(this.getKey(e)),this.updateBounds()}has(e){return this.positions.has(this.getKey(e))}getKey(e){return`${e.x}:${e.y}:${e.z}`}updateBounds(e){return e?this.min&&this.max?(this.min={x:Math.min(this.min.x,e.x),y:Math.min(this.min.y,e.y),z:Math.min(this.min.z,e.z)},void(this.max={x:Math.max(this.max.x,e.x),y:Math.max(this.max.y,e.y),z:Math.max(this.max.z,e.z)})):(this.min={x:e.x,y:e.y,z:e.z},void(this.max={x:e.x,y:e.y,z:e.z})):(this.min=void 0,void(this.max=void 0))}}class c extends s{calculateVolumes(){const e=[],t=new s;if(!this.min||!this.max)return e;for(let o=this.min.x;o<=this.max.x;o++)for(let n=this.min.z;n<=this.max.z;n++)for(let i=this.min.y;i<=this.max.y;i++){if(!this.has({x:o,y:i,z:n})||t.has({x:o,y:i,z:n}))continue;let r=0,a=0,s=0;for(let e=o+1;e<=this.max.x;e++){const o={x:e,y:i,z:n};if(!this.has(o)||t.has(o))break;r++}e:for(let e=n+1;e<=this.max.z;e++){for(let n=o;n<=o+r;n++){const o={x:n,y:i,z:e};if(!this.has(o)||t.has(o))break e}s++}e:for(let e=i+1;e<=this.max.y;e++){for(let i=o;i<=o+r;i++)for(let o=n;o<=n+s;o++){const n={x:i,y:e,z:o};if(!this.has(n)||t.has(n))break e}a++}for(let e=o;e<=o+r;e++)for(let o=i;o<=i+a;o++)for(let i=n;i<=n+s;i++)t.add({x:e,y:o,z:i});e.push({from:{x:o,y:i,z:n},to:{x:o+r,y:i+a,z:n+s}})}return e}}const l=(e,t,o=!1)=>{const n=new c,i=2*t-1,r=Math.floor(i/2);for(let i=0;i<t;i++){const a=r-i;for(let r=-a;r<=a;r++)for(let s=-a;s<=a;s++){const c=e.x+r,l=e.y+i,u=e.z+s;o&&i>0&&i<t-1&&r>-a&&r<a&&s>-a&&s<a||n.add({x:c,y:l,z:u})}}return n},u=(e,t,o,n=!1)=>{const i=new c;for(let r=0;r<o;r++){let a=e.x,s=e.y+r,c=e.z;for(let e=-t;e<=t;e++)for(let l=-t;l<=t;l++){const u=Math.sqrt(e*e+l*l);(!n&&u<=t||n&&(u>=t-.5&&u<=t+.5&&(0==r&&u<t-.5||r==o-1&&u<t-.5)||0!=r&&r!=o-1&&u<t-.5)&&(u>=t-1.5||0==r||r==o-1))&&i.add({x:a+e,y:s,z:c+l})}}return i},d=(e,t,o=!1)=>{const n=new c;for(let i=-t;i<=t;i++)for(let r=-t;r<=t;r++)for(let a=-t;a<=t;a++){const s=Math.sqrt(i*i+r*r+a*a);s<=t&&(!o||s>=t-1)&&n.add({x:e.x+i,y:e.y+r,z:e.z+a})}return n};var g;!function(e){e[e.Forward=0]="Forward",e[e.Right=1]="Right",e[e.Back=2]="Back",e[e.Left=3]="Left",e[e.Up=4]="Up",e[e.Down=5]="Down"}(g||(g={}));const x={[g.Forward]:i.Vector.forward,[g.Right]:i.Vector.left,[g.Back]:i.Vector.back,[g.Left]:i.Vector.right,[g.Up]:i.Vector.up,[g.Down]:i.Vector.down},p=(e,t)=>{const o=((e,t)=>t===g.Up||t===g.Down?t:Math.floor((e+405+90*t)%360/90))(e,t);return x[o]},y=(e,t,o,r)=>{const a=o.dimension.getBlock(r),s=e.createPropertyPane({titleAltText:"Block Modifier",titleStringId:"",width:40}),c=n.bindDataSource(s,{blockType:a.typeId,newBlockType:"minecraft:stone",location:a.location,waterlogged:a.isWaterlogged,weirdo_direction:a.permutation.getState("weirdo_direction"),direction:a.permutation.getState("direction"),lever_direction:a.permutation.getState("lever_direction"),brushed_progress:a.permutation.getState("brushed_progress"),growth:a.permutation.getState("growth"),redstone_signal:a.permutation.getState("redstone_signal"),repeater_delay:a.permutation.getState("repeater_delay"),rail_direction:a.permutation.getState("rail_direction"),damage:a.permutation.getState("damage")});s.addString(c,"blockType",{titleAltText:"Block Type",enable:!1}),s.addVector3(c,"location",{titleAltText:"Location",enable:!1,minX:Number.MIN_SAFE_INTEGER,minY:Number.MIN_SAFE_INTEGER,minZ:Number.MIN_SAFE_INTEGER}),s.addDivider(),s.addBlockPicker(c,"newBlockType",{titleAltText:"Block Type"}),s.addButton(e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:async()=>{s.dispose(),a.setType(c.newBlockType),"minecraft:air"!=c.newBlockType&&y(e,t,o,r)}}),{titleAltText:"Change Type"}),s.addDivider(),i.BlockTypes.get(a.typeId).canBeWaterlogged&&s.addBool(c,"waterlogged",{titleAltText:"Waterlogged",onChange:()=>{a.isWaterlogged=c.waterlogged}}),a.permutation.getState("lever_direction")&&s.addDropdown(c,"lever_direction",{titleAltText:"Lever Direction",dropdownItems:i.BlockStates.get("lever_direction").validValues.map((e=>({displayAltText:e,displayStringId:"",value:e}))),onChange:()=>{try{a.setPermutation(i.BlockPermutation.resolve(a.typeId,{lever_direction:c.lever_direction}))}catch(e){s.dispose()}}}),null!=a.permutation.getState("redstone_signal")&&s.addNumber(c,"redstone_signal",{titleAltText:"Redstone Signal",min:0,max:15,showSlider:!0,onChange:()=>{try{a.setPermutation(i.BlockPermutation.resolve(a.typeId,{redstone_signal:c.redstone_signal}))}catch(e){s.dispose()}}}),null!=a.permutation.getState("repeater_delay")&&s.addNumber(c,"repeater_delay",{titleAltText:"Repeater Delay",min:0,max:3,showSlider:!0,onChange:()=>{try{a.setPermutation(i.BlockPermutation.resolve(a.typeId,{repeater_delay:c.repeater_delay}))}catch(e){s.dispose()}}}),null==a.permutation.getState("weirdo_direction")&&null==a.permutation.getState("direction")||s.addNumber(c,null!=a.permutation.getState("weirdo_direction")?"weirdo_direction":"direction",{titleAltText:"Direction",min:0,max:3,showSlider:!0,onChange:()=>{try{let e=null!=a.permutation.getState("weirdo_direction")?{weirdo_direction:c.weirdo_direction}:{direction:c.direction};a.setPermutation(i.BlockPermutation.resolve(a.typeId,e))}catch(e){}}}),null!=a.permutation.getState("brushed_progress")&&s.addNumber(c,"brushed_progress",{titleAltText:"Brushed Progress",min:0,max:3,showSlider:!0,onChange:()=>{try{a.setPermutation(i.BlockPermutation.resolve(a.typeId,{brushed_progress:c.brushed_progress}))}catch(e){s.dispose()}}}),null!=a.permutation.getState("growth")&&s.addNumber(c,"growth",{titleAltText:"Growth",min:0,max:7,showSlider:!0,onChange:()=>{try{a.setPermutation(i.BlockPermutation.resolve(a.typeId,{growth:c.growth}))}catch(e){s.dispose()}}}),null!=a.permutation.getState("rail_direction")&&s.addNumber(c,"rail_direction",{titleAltText:"Rail Direction",min:0,max:9,showSlider:!0,onChange:()=>{try{a.setPermutation(i.BlockPermutation.resolve(a.typeId,{rail_direction:c.rail_direction}))}catch(e){s.dispose()}}}),a.permutation.getState("damage")&&s.addDropdown(c,"damage",{titleAltText:"Damage",dropdownItems:i.BlockStates.get("damage").validValues.map((e=>({displayAltText:e,displayStringId:"",value:e}))),onChange:()=>{try{a.setPermutation(i.BlockPermutation.resolve(a.typeId,{damage:c.damage}))}catch(e){s.dispose()}}}),t.bindPropertyPane(s),s.update(!0)},m={"minecraft:overworld":"Overworld","minecraft:nether":"The Nether","minecraft:the_end":"The End"};n.registerEditorExtension("PyramidBrush",(e=>{e.log.debug(`Initializing ${e.extensionContext.extensionInfo.name} extension`);const t=e.toolRail.addTool({displayAltText:"Pyramid",tooltipAltText:"Left mouse click or drag-to-paint",icon:"pack://textures/editor/pyramid.png?filtering=point"}),o=e.extensionContext.selectionManager.create();o.visible=!0,o.setOutlineColor(new r(0,.5,.5,.2)),o.setFillColor(new r(0,0,.5,.1)),e.scratchStorage={currentCursorState:{outlineColor:new r(1,1,0,1),controlMode:n.CursorControlMode.KeyboardAndMouse,targetMode:n.CursorTargetMode.Block,visible:!0,fixedModeDistance:5},previewSelection:o},t.onModalToolActivation.subscribe((t=>{t.isActiveTool&&e.extensionContext.cursor.setProperties(e.scratchStorage.currentCursorState)}));const s=e.createPropertyPane({titleAltText:"Pyramid",titleStringId:""}),c=n.bindDataSource(s,{size:6,hollow:!1,face:!1,blockType:"minecraft:stone"});s.addNumber(c,"size",{titleAltText:"Brush Size",min:1,max:12,showSlider:!0}),s.addBool(c,"hollow",{titleAltText:"Hollow"}),s.addBool(c,"face",{titleAltText:"Face Mode",onChange:()=>{if(void 0===e.scratchStorage)return e.log.error("Cylinder storage was not initialized.");e.scratchStorage.currentCursorState.targetMode=c.face?n.CursorTargetMode.Face:n.CursorTargetMode.Block,e.extensionContext.cursor.setProperties(e.scratchStorage.currentCursorState)}}),s.addDivider(),s.addBlockPicker(c,"blockType",{titleAltText:"Block Type"}),t.bindPropertyPane(s);const u=()=>{if(!e.scratchStorage?.previewSelection)return e.log.error("Pyramid storage was not initialized.");const t=e.scratchStorage.previewSelection,o=e.extensionContext.player.dimension.getBlock(e.extensionContext.cursor.getPosition());if(!o)return;const n=o.location;if(e.scratchStorage.lastCursorPosition?.x==e.extensionContext.cursor.getPosition().x&&e.scratchStorage.lastCursorPosition?.y==e.extensionContext.cursor.getPosition().y&&e.scratchStorage.lastCursorPosition?.z==e.extensionContext.cursor.getPosition().z)return;const r=l(n,c.size,c.hollow).calculateVolumes();for(let e=0;e<r.length;e++){const o=r[e];(o.from.y>=-64&&o.from.y<=320||o.to.y>=-64&&o.to.y<=320)&&t.pushVolume({action:i.CompoundBlockVolumeAction.Add,volume:o})}e.scratchStorage.lastCursorPosition=e.extensionContext.cursor.getPosition()};return t.registerMouseWheelBinding(e.actionManager.createAction({actionType:n.ActionTypes.MouseRayCastAction,onExecute:async(e,t)=>{t.mouseAction===n.MouseActionType.Wheel&&(t.inputType===n.MouseInputType.WheelOut&&c.size<12?c.size++:t.inputType===n.MouseInputType.WheelIn&&c.size>1&&c.size--)}})),t.registerMouseButtonBinding(e.actionManager.createAction({actionType:n.ActionTypes.MouseRayCastAction,onExecute:async(t,o)=>{if(o.mouseAction===n.MouseActionType.LeftButton)if(o.inputType===n.MouseInputType.ButtonDown)e.extensionContext.transactionManager.openTransaction("cylinderTool"),e.scratchStorage.previewSelection.clear(),u();else if(o.inputType===n.MouseInputType.ButtonUp){const t=e.extensionContext.player;try{e.extensionContext.transactionManager.trackBlockChangeSelection(e.scratchStorage.previewSelection)}catch(t){return e.log.warning(`Unable to execute brush. ${a(t)}`),void e.extensionContext.transactionManager.discardOpenTransaction()}await n.executeLargeOperation(e.scratchStorage.previewSelection,(e=>{e.y>=-64&&e.y<=320&&i.system.run((async function(){const o=t.dimension.getBlock(e);o&&o.setType(c.blockType)}))})).catch((()=>{e.extensionContext.transactionManager.commitOpenTransaction(),e.scratchStorage?.previewSelection.clear()})).then((()=>{e.extensionContext.transactionManager.commitOpenTransaction(),e.scratchStorage?.previewSelection.clear()}))}}})),t.registerMouseDragBinding(e.actionManager.createAction({actionType:n.ActionTypes.MouseRayCastAction,onExecute:(e,t)=>{t.inputType===n.MouseInputType.Drag&&u()}})),[]}),(e=>{e.log.debug(`Shutting down ${e.extensionContext.extensionInfo.name} extension`)}),{toolGroupId:"brushes"}),n.registerEditorExtension("CylinderBrush",(e=>{e.log.debug(`Initializing ${e.extensionContext.extensionInfo.name} extension`);const t=e.toolRail.addTool({displayAltText:"Cylinder (CTRL + SHIFT + C)",tooltipAltText:"Left mouse click or drag-to-paint",icon:"pack://textures/editor/cylinder.png?filtering=point"}),o=e.extensionContext.selectionManager.create();o.visible=!0,o.setOutlineColor(new r(0,.5,.5,.2)),o.setFillColor(new r(0,0,.5,.1)),e.scratchStorage={currentCursorState:{outlineColor:new r(1,1,0,1),controlMode:n.CursorControlMode.KeyboardAndMouse,targetMode:n.CursorTargetMode.Block,visible:!0,fixedModeDistance:5},previewSelection:o},t.onModalToolActivation.subscribe((t=>{t.isActiveTool&&e.extensionContext.cursor.setProperties(e.scratchStorage.currentCursorState)})),e.inputManager.registerKeyBinding(n.EditorInputContext.GlobalToolMode,e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:()=>{e.toolRail.setSelectedOptionId(t.id,!0)}}),n.KeyboardKey.KEY_C,n.InputModifier.Shift|n.InputModifier.Control);const s=e.createPropertyPane({titleAltText:"Cylinder",titleStringId:""}),c=n.bindDataSource(s,{size:3,height:6,hollow:!1,face:!1,blockType:"minecraft:stone"});s.addNumber(c,"size",{titleAltText:"Brush Size",min:1,max:16,showSlider:!0}),s.addNumber(c,"height",{titleAltText:"Height",min:1,max:8,showSlider:!0}),s.addBool(c,"hollow",{titleAltText:"Hollow"}),s.addBool(c,"face",{titleAltText:"Face Mode",onChange:()=>{if(void 0===e.scratchStorage)return e.log.error("Cylinder storage was not initialized.");e.scratchStorage.currentCursorState.targetMode=c.face?n.CursorTargetMode.Face:n.CursorTargetMode.Block,e.extensionContext.cursor.setProperties(e.scratchStorage.currentCursorState)}}),s.addDivider(),s.addBlockPicker(c,"blockType",{titleAltText:"Block Type"}),t.bindPropertyPane(s);const l=()=>{if(!e.scratchStorage?.previewSelection)return e.log.error("Cylinder storage was not initialized.");const t=e.scratchStorage.previewSelection,o=e.extensionContext.player.dimension.getBlock(e.extensionContext.cursor.getPosition());if(!o)return;const n=o.location;if(e.scratchStorage.lastCursorPosition?.x==e.extensionContext.cursor.getPosition().x&&e.scratchStorage.lastCursorPosition?.y==e.extensionContext.cursor.getPosition().y&&e.scratchStorage.lastCursorPosition?.z==e.extensionContext.cursor.getPosition().z)return;const r=u(n,c.size,c.height,c.hollow).calculateVolumes();for(let e=0;e<r.length;e++){const o=r[e];(o.from.y>=-64&&o.from.y<=320||o.to.y>=-64&&o.to.y<=320)&&t.pushVolume({action:i.CompoundBlockVolumeAction.Add,volume:o})}e.scratchStorage.lastCursorPosition=e.extensionContext.cursor.getPosition()};return t.registerMouseWheelBinding(e.actionManager.createAction({actionType:n.ActionTypes.MouseRayCastAction,onExecute:async(e,t)=>{t.mouseAction===n.MouseActionType.Wheel&&(t.modifiers.ctrl?t.inputType===n.MouseInputType.WheelOut&&c.height<8?c.height++:t.inputType===n.MouseInputType.WheelIn&&c.height>1&&c.height--:t.inputType===n.MouseInputType.WheelOut&&c.size<16?c.size++:t.inputType===n.MouseInputType.WheelIn&&c.size>1&&c.size--)}})),t.registerMouseButtonBinding(e.actionManager.createAction({actionType:n.ActionTypes.MouseRayCastAction,onExecute:async(t,o)=>{if(o.mouseAction===n.MouseActionType.LeftButton)if(o.inputType===n.MouseInputType.ButtonDown)e.extensionContext.transactionManager.openTransaction("cylinderTool"),e.scratchStorage.previewSelection.clear(),l();else if(o.inputType===n.MouseInputType.ButtonUp){const t=e.extensionContext.player;try{e.extensionContext.transactionManager.trackBlockChangeSelection(e.scratchStorage.previewSelection)}catch(t){return e.log.warning(`Unable to execute brush. ${a(t)}`),void e.extensionContext.transactionManager.discardOpenTransaction()}await n.executeLargeOperation(e.scratchStorage.previewSelection,(e=>{e.y>=-64&&e.y<=320&&i.system.run((async function(){const o=t.dimension.getBlock(e);o&&o.setType(c.blockType)}))})).catch((()=>{e.extensionContext.transactionManager.commitOpenTransaction(),e.scratchStorage?.previewSelection.clear()})).then((()=>{e.extensionContext.transactionManager.commitOpenTransaction(),e.scratchStorage?.previewSelection.clear()}))}}})),t.registerMouseDragBinding(e.actionManager.createAction({actionType:n.ActionTypes.MouseRayCastAction,onExecute:(e,t)=>{t.inputType===n.MouseInputType.Drag&&l()}})),[]}),(e=>{e.log.debug(`Shutting down ${e.extensionContext.extensionInfo.name} extension`)}),{toolGroupId:"brushes"}),n.registerEditorExtension("SphereBrush",(e=>{e.log.debug(`Initializing ${e.extensionContext.extensionInfo.name} extension`);const t=e.toolRail.addTool({displayAltText:"Sphere (CTRL + SHIFT + S)",tooltipAltText:"Left mouse click or drag-to-paint",icon:"pack://textures/editor/sphere.png?filtering=point"}),o=e.extensionContext.selectionManager.create();o.visible=!0,o.setOutlineColor(new r(0,.5,.5,.2)),o.setFillColor(new r(0,0,.5,.1)),e.scratchStorage={currentCursorState:{outlineColor:new r(1,1,0,1),controlMode:n.CursorControlMode.KeyboardAndMouse,targetMode:n.CursorTargetMode.Block,visible:!0,fixedModeDistance:5},previewSelection:o},t.onModalToolActivation.subscribe((t=>{t.isActiveTool&&e.extensionContext.cursor.setProperties(e.scratchStorage.currentCursorState)})),e.inputManager.registerKeyBinding(n.EditorInputContext.GlobalToolMode,e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:()=>{e.toolRail.setSelectedOptionId(t.id,!0)}}),n.KeyboardKey.KEY_S,n.InputModifier.Shift|n.InputModifier.Control);const s=e.createPropertyPane({titleAltText:"Sphere",titleStringId:""}),c=n.bindDataSource(s,{size:3,hollow:!1,face:!1,blockType:"minecraft:stone"});s.addNumber(c,"size",{titleAltText:"Brush Size",min:1,max:10,showSlider:!0}),s.addBool(c,"hollow",{titleAltText:"Hollow"}),s.addBool(c,"face",{titleAltText:"Face Mode",onChange:()=>{if(null==e.scratchStorage)return e.log.error("Sphere storage was not initialized.");e.scratchStorage.currentCursorState.targetMode=c.face?n.CursorTargetMode.Face:n.CursorTargetMode.Block,e.extensionContext.cursor.setProperties(e.scratchStorage.currentCursorState)}}),s.addDivider(),s.addBlockPicker(c,"blockType",{titleAltText:"Block Type"}),t.bindPropertyPane(s);const l=()=>{if(!e.scratchStorage?.previewSelection)return e.log.error("Brush storage was not initialized.");const t=e.scratchStorage.previewSelection,o=e.extensionContext.player.dimension.getBlock(e.extensionContext.cursor.getPosition());if(!o)return;const n=o.location;if(e.scratchStorage.lastCursorPosition?.x==e.extensionContext.cursor.getPosition().x&&e.scratchStorage.lastCursorPosition?.y==e.extensionContext.cursor.getPosition().y&&e.scratchStorage.lastCursorPosition?.z==e.extensionContext.cursor.getPosition().z)return;const r=d(n,c.size,c.hollow).calculateVolumes();for(let e=0;e<r.length;e++){const o=r[e];(o.from.y>=-64&&o.from.y<=320||o.to.y>=-64&&o.to.y<=320)&&t.pushVolume({action:i.CompoundBlockVolumeAction.Add,volume:o})}e.scratchStorage.lastCursorPosition=e.extensionContext.cursor.getPosition()};return t.registerMouseWheelBinding(e.actionManager.createAction({actionType:n.ActionTypes.MouseRayCastAction,onExecute:async(e,t)=>{t.mouseAction===n.MouseActionType.Wheel&&(t.inputType===n.MouseInputType.WheelOut&&c.size<10?c.size++:t.inputType===n.MouseInputType.WheelIn&&c.size>1&&c.size--)}})),t.registerMouseButtonBinding(e.actionManager.createAction({actionType:n.ActionTypes.MouseRayCastAction,onExecute:async(t,o)=>{if(o.mouseAction===n.MouseActionType.LeftButton)if(o.inputType===n.MouseInputType.ButtonDown)e.extensionContext.transactionManager.openTransaction("sphereTool"),e.scratchStorage.previewSelection.clear(),l();else if(o.inputType===n.MouseInputType.ButtonUp){const t=e.extensionContext.player;try{e.extensionContext.transactionManager.trackBlockChangeSelection(e.scratchStorage.previewSelection)}catch(t){return e.log.warning(`Unable to execute brush. ${a(t)}`),void e.extensionContext.transactionManager.discardOpenTransaction()}await n.executeLargeOperation(e.scratchStorage.previewSelection,(e=>{e.y>=-64&&e.y<=320&&i.system.run((async function(){const o=t.dimension.getBlock(e);o&&o.setType(c.blockType)}))})).catch((()=>{e.extensionContext.transactionManager.commitOpenTransaction(),e.scratchStorage?.previewSelection.clear()})).then((()=>{e.extensionContext.transactionManager.commitOpenTransaction(),e.scratchStorage?.previewSelection.clear()}))}}})),t.registerMouseDragBinding(e.actionManager.createAction({actionType:n.ActionTypes.MouseRayCastAction,onExecute:(e,t)=>{t.inputType===n.MouseInputType.Drag&&l()}})),[]}),(e=>{e.log.debug(`Shutting down ${e.extensionContext.extensionInfo.name} extension`)}),{toolGroupId:"brushes"}),n.registerEditorExtension("CubeBrush",(e=>{e.log.debug(`Initializing ${e.extensionContext.extensionInfo.name} extension`);const t=e.toolRail.addTool({displayAltText:"Cube (CTRL + B)",tooltipAltText:"Left mouse click or drag-to-paint",icon:"pack://textures/editor/Cube.png?filtering=point"}),o=e.extensionContext.selectionManager.create();o.visible=!0,o.setOutlineColor(new r(0,.5,.5,.2)),o.setFillColor(new r(0,0,.5,.1)),e.scratchStorage={currentCursorState:{outlineColor:new r(1,1,0,1),controlMode:n.CursorControlMode.KeyboardAndMouse,targetMode:n.CursorTargetMode.Block,visible:!0,fixedModeDistance:5},previewSelection:o},t.onModalToolActivation.subscribe((t=>{t.isActiveTool&&e.extensionContext.cursor.setProperties(e.scratchStorage.currentCursorState)})),e.inputManager.registerKeyBinding(n.EditorInputContext.GlobalToolMode,e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:()=>{e.toolRail.setSelectedOptionId(t.id,!0)}}),n.KeyboardKey.KEY_B,n.InputModifier.Control);const s=e.createPropertyPane({titleAltText:"Cube",titleStringId:""}),c=n.bindDataSource(s,{size:3,hollow:!1,face:!1,blockType:"minecraft:stone"});s.addNumber(c,"size",{titleAltText:"Brush Size",min:1,max:16,showSlider:!0}),s.addBool(c,"hollow",{titleAltText:"Hollow"}),s.addBool(c,"face",{titleAltText:"Face Mode",onChange:()=>{if(void 0===e.scratchStorage)return e.log.error("Cube storage was not initialized.");e.scratchStorage.currentCursorState.targetMode=c.face?n.CursorTargetMode.Face:n.CursorTargetMode.Block,e.extensionContext.cursor.setProperties(e.scratchStorage.currentCursorState)}}),s.addDivider(),s.addBlockPicker(c,"blockType",{titleAltText:"Block Type"}),t.bindPropertyPane(s);const l=()=>{if(!e.scratchStorage?.previewSelection)return e.log.error("Cube storage was not initialized.");const t=e.scratchStorage.previewSelection,o=e.extensionContext.player.dimension.getBlock(e.extensionContext.cursor.getPosition());if(!o)return;const n=e.extensionContext.player.getRotation().y,r=p(n,g.Right),a=p(n,g.Back),s=i.Vector.add(i.Vector.add(r,a),i.Vector.up),l=Math.floor(c.size/2);let u=i.Vector.multiply(s,-l);const d=i.Vector.multiply(s,c.size-1);c.size%2==0&&(u=i.Vector.add(u,i.Vector.up));const x={x:o.location.x+u.x,y:o.location.y+u.y,z:o.location.z+u.z},y={x:x.x+d.x,y:x.y+d.y,z:x.z+d.z},m=i.BlockVolumeUtils.getBoundingBox({from:x,to:y});if(e.scratchStorage.lastVolumePlaced&&i.BoundingBoxUtils.equals(e.scratchStorage.lastVolumePlaced,m))return;t.pushVolume({action:i.CompoundBlockVolumeAction.Add,volume:{from:x,to:y}}),e.scratchStorage.lastVolumePlaced=m;const T=i.BoundingBoxUtils.getSpan(m);c.hollow&&T.x>2&&T.y>2&&T.z>2&&t.pushVolume({action:i.CompoundBlockVolumeAction.Subtract,volume:{from:{x:x.x+s.x,y:x.y+1,z:x.z+s.z},to:{x:y.x-s.x,y:y.y-1,z:y.z-s.z}}})};return t.registerMouseWheelBinding(e.actionManager.createAction({actionType:n.ActionTypes.MouseRayCastAction,onExecute:async(e,t)=>{t.mouseAction===n.MouseActionType.Wheel&&(t.inputType===n.MouseInputType.WheelOut&&c.size<16?c.size++:t.inputType===n.MouseInputType.WheelIn&&c.size>1&&c.size--)}})),t.registerMouseButtonBinding(e.actionManager.createAction({actionType:n.ActionTypes.MouseRayCastAction,onExecute:async(t,o)=>{if(o.mouseAction===n.MouseActionType.LeftButton)if(o.inputType===n.MouseInputType.ButtonDown)e.extensionContext.transactionManager.openTransaction("cubeTool"),e.scratchStorage.previewSelection.clear(),l();else if(o.inputType===n.MouseInputType.ButtonUp){const t=e.extensionContext.player;try{e.extensionContext.transactionManager.trackBlockChangeSelection(e.scratchStorage.previewSelection)}catch(t){return e.log.warning(`Unable to execute brush. ${a(t)}`),void e.extensionContext.transactionManager.discardOpenTransaction()}e.extensionContext.transactionManager.trackBlockChangeSelection(e.scratchStorage.previewSelection),await n.executeLargeOperation(e.scratchStorage.previewSelection,(e=>{e.y>=-64&&e.y<=320&&i.system.run((async function(){const o=t.dimension.getBlock(e);o&&o.setType(c.blockType)}))})).catch((()=>{e.extensionContext.transactionManager.commitOpenTransaction(),e.scratchStorage?.previewSelection.clear()})).then((()=>{e.extensionContext.transactionManager.commitOpenTransaction(),e.scratchStorage?.previewSelection.clear()}))}}})),t.registerMouseDragBinding(e.actionManager.createAction({actionType:n.ActionTypes.MouseRayCastAction,onExecute:(e,t)=>{t.inputType===n.MouseInputType.Drag&&l()}})),[]}),(e=>{e.log.debug(`Shutting down ${e.extensionContext.extensionInfo.name} extension`)}),{toolGroupId:"brushes"}),n.registerEditorExtension("StructurePlacer",(e=>{e.log.debug(`Initializing ${e.extensionContext.extensionInfo.name} extension`);const t=e.toolRail.addTool({displayAltText:"Structure Placer (CTRL + P)",tooltipAltText:"Left mouse click to place a structure",icon:"pack://textures/editor/structure_placer.png?filtering=point"});e.scratchStorage={currentCursorState:{outlineColor:new r(1,1,0,1),controlMode:n.CursorControlMode.KeyboardAndMouse,targetMode:n.CursorTargetMode.Face,visible:!0,fixedModeDistance:5}},t.onModalToolActivation.subscribe((t=>{t.isActiveTool&&e.extensionContext.cursor.setProperties(e.scratchStorage.currentCursorState)})),e.inputManager.registerKeyBinding(n.EditorInputContext.GlobalToolMode,e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:()=>{e.toolRail.setSelectedOptionId(t.id,!0)}}),n.KeyboardKey.KEY_P,n.InputModifier.Control);const o=e.createPropertyPane({titleAltText:"Structure Placer",titleStringId:"",width:73}),i=n.bindDataSource(o,{structureName:"",face:!0,vanillaStructure:"",rotation:0,mirror:0,includeEntities:!0,waterlogBlocks:!1,removeBlocks:!1});o.addString(i,"structureName",{titleAltText:"Structure Name"}),o.addBool(i,"face",{titleAltText:"Face Mode",onChange:()=>{void 0!==e.scratchStorage?(e.scratchStorage.currentCursorState.targetMode=i.face?n.CursorTargetMode.Face:n.CursorTargetMode.Block,e.extensionContext.cursor.setProperties(e.scratchStorage.currentCursorState)):e.log.error("Cube storage was not initialized.")}});const a=["0_degrees","90_degrees","180_degrees","270_degrees"];o.addDropdown(i,"rotation",{titleAltText:"Rotation",dropdownItems:[{displayAltText:"0°",displayStringId:"",value:0},{displayAltText:"90°",displayStringId:"",value:1},{displayAltText:"180°",displayStringId:"",value:2},{displayAltText:"270°",displayStringId:"",value:3}]});const s=["none","x","xz","z"];return o.addDropdown(i,"mirror",{titleAltText:"Mirror",dropdownItems:[{displayAltText:"None",displayStringId:"",value:0},{displayAltText:"X",displayStringId:"",value:1},{displayAltText:"XZ",displayStringId:"",value:2},{displayAltText:"Z",displayStringId:"",value:3}]}),o.addBool(i,"includeEntities",{titleAltText:"Include Entities"}),o.addBool(i,"waterlogBlocks",{titleAltText:"Waterlog Blocks"}),o.addBool(i,"removeBlocks",{titleAltText:"Remove Blocks"}),t.bindPropertyPane(o),t.registerMouseButtonBinding(e.actionManager.createAction({actionType:n.ActionTypes.MouseRayCastAction,onExecute:(t,o)=>{try{if(o.mouseAction==n.MouseActionType.LeftButton)if(o.inputType==n.MouseInputType.ButtonDown)e.extensionContext.selectionManager.selection.clear();else if(o.inputType==n.MouseInputType.ButtonUp){const t=e.extensionContext.player;if(0==i.structureName.trim().length)return;t.dimension.runCommandAsync(`structure load "${i.structureName}" ${e.extensionContext.cursor.getPosition().x} ${e.extensionContext.cursor.getPosition().y} ${e.extensionContext.cursor.getPosition().z} ${a[i.rotation]} ${s[i.mirror]} ${i.includeEntities} ${!i.removeBlocks} ${i.waterlogBlocks}`),e.extensionContext.selectionManager.selection.clear()}}catch(t){e.log.error(t)}}})),[]}),(e=>{e.log.debug(`Shutting down ${e.extensionContext.extensionInfo.name} extension`)}),{toolGroupId:"structures"}),n.registerEditorExtension("StructureSaver",(e=>{e.log.debug(`Initializing ${e.extensionContext.extensionInfo.name} extension`);const t=e.toolRail.addTool({displayAltText:"Structure Saver (CTRL + SHIFT + P)",tooltipAltText:"",icon:"pack://textures/editor/structure_saver.png?filtering=point"});e.scratchStorage={currentCursorState:{outlineColor:new r(1,1,0,1),controlMode:n.CursorControlMode.KeyboardAndMouse,targetMode:n.CursorTargetMode.Block,visible:!0,fixedModeDistance:5}};let o={x:0,y:0,z:0};const a=e.createPropertyPane({titleAltText:"Structure Saver",titleStringId:"",width:40}),s=n.bindDataSource(a,{origin:{x:0,y:0,z:0},size:{x:0,y:0,z:0},structureName:"",includeEntities:!0}),c=(e,t,n,r,a)=>{const s=t.cursorBlockLocation;if(n||r||a)if(!n||r||a)if(!r||n||a){if(a&&!n&&!r)if(e.extensionContext.selectionManager.selection.isEmpty)e.extensionContext.selectionManager.selection.pushVolume({action:i.CompoundBlockVolumeAction.Add,volume:{from:s,to:s}}),o=s;else{const o=e.extensionContext.selectionManager.selection.peekLastVolume().volume,n=i.BlockVolumeUtils.getBoundingBox(o),r=i.Vector.subtract(new i.Vector(t.location.x,t.location.y,t.location.z),new i.Vector(n.min.x,n.min.y,n.min.z));if(!0){const t=Math.ceil(r.y)-1;e.extensionContext.selectionManager.selection.popVolume(),e.extensionContext.selectionManager.selection.pushVolume({action:i.CompoundBlockVolumeAction.Add,volume:{from:{x:n.min.x,y:n.min.y,z:n.min.z},to:{x:n.max.x,y:t,z:n.max.z}}})}}}else e.extensionContext.selectionManager.selection.pushVolume({action:i.CompoundBlockVolumeAction.Add,volume:{from:s,to:s}}),o=s;else if(e.extensionContext.selectionManager.selection.isEmpty)e.extensionContext.selectionManager.selection.pushVolume({action:i.CompoundBlockVolumeAction.Add,volume:{from:s,to:s}}),o=s;else{const t=o;e.extensionContext.selectionManager.selection.popVolume(),e.extensionContext.selectionManager.selection.pushVolume({action:i.CompoundBlockVolumeAction.Add,volume:{from:t,to:s}})}else e.extensionContext.selectionManager.selection.clear(),e.extensionContext.selectionManager.selection.pushVolume({action:i.CompoundBlockVolumeAction.Add,volume:{from:s,to:s}}),o=s},l=e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:()=>{const t=e.extensionContext.cursor.getPosition(),o={location:{x:0,y:0,z:0},direction:new i.Vector(0,0,0),cursorBlockLocation:t,rayHit:!1};c(e,o,!1,!1,!1)}});t.registerKeyBinding(l,n.KeyboardKey.ENTER,n.InputModifier.None);const u=e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:()=>{const t=e.extensionContext.cursor.getPosition(),o={location:{x:0,y:0,z:0},direction:new i.Vector(0,0,0),cursorBlockLocation:t,rayHit:!1};c(e,o,!1,!0,!1)}});t.registerKeyBinding(u,n.KeyboardKey.ENTER,n.InputModifier.Control);const d=e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:()=>{const t=e.extensionContext.cursor.getPosition(),o={location:{x:0,y:0,z:0},direction:new i.Vector(0,0,0),cursorBlockLocation:t,rayHit:!1};c(e,o,!0,!1,!1)}});t.registerKeyBinding(d,n.KeyboardKey.ENTER,n.InputModifier.Shift);const g=e.actionManager.createAction({actionType:n.ActionTypes.MouseRayCastAction,onExecute:(t,o)=>{o.mouseAction===n.MouseActionType.LeftButton&&(o.inputType===n.MouseInputType.ButtonDown?t.rayHit?c(e,t,o.modifiers.shift,o.modifiers.ctrl,o.modifiers.alt):e.extensionContext.selectionManager.selection.clear():(o.inputType,n.MouseInputType.ButtonUp))}});t.registerMouseButtonBinding(g);const x=(t,o,n,r)=>{if(n===r)return;const a=e.extensionContext.selectionManager.selection;if(!a.isEmpty){a.peekLastVolume().volume&&(a.popVolume(),a.pushVolume({action:i.CompoundBlockVolumeAction.Add,volume:{from:s.origin,to:{x:s.origin.x+s.size.x-1,y:s.origin.y+s.size.y-1,z:s.origin.z+s.size.z-1}}}))}},p=a.createPropertyPane({titleAltText:"Transform",titleStringId:""}),y=p.addVector3(s,"origin",{titleAltText:"Origin",enable:!0,minX:Number.MIN_SAFE_INTEGER,minY:Number.MIN_SAFE_INTEGER,minZ:Number.MIN_SAFE_INTEGER,onChange:x}),m=p.addVector3(s,"size",{titleAltText:"Size",enable:!0,minX:1,minY:1,minZ:1,maxX:100,maxY:100,maxZ:100,onChange:x}),T=(e,t)=>{let o=0,n=i.system.run((()=>{if(void 0!==e.extensionContext.selectionManager)if(s){if(o++%5==0){o=0;let t=0,n=0,r=0,a=0,c=0,l=0;const u=e.extensionContext.selectionManager.selection;if(u&&!u.isEmpty){const e=i.BlockVolumeUtils.getBoundingBox(u.peekLastVolume().volume),o=i.BoundingBoxUtils.getSpan(e);t=e.min.x,n=e.min.y,r=e.min.z,a=o.x,c=o.y,l=o.z,y?.enable||y&&(y.enable=!0),m?.enable||m&&(m.enable=!0)}else y?.enable&&y&&(y.enable=!1),m?.enable&&m&&(m.enable=!1);s.origin.x===t&&s.origin.y===n&&s.origin.z===r&&s.size.x===a&&s.size.y===c&&s.size.z===l||(s.origin.x=Math.trunc(t),s.origin.y=Math.trunc(n),s.origin.z=Math.trunc(r),s.size.x=Math.trunc(a),s.size.y=Math.trunc(c),s.size.z=Math.trunc(l))}e.toolRail.selectedOptionId===t.id&&(n=i.system.run((()=>T(e,t))))}else e.log.error("Pane settings object not defined, unable to refresh values for selection.")}))};return t.onModalToolActivation.subscribe((o=>{o.isActiveTool&&(e.extensionContext.cursor.setProperties(e.scratchStorage.currentCursorState),T(e,t))})),e.inputManager.registerKeyBinding(n.EditorInputContext.GlobalToolMode,e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:()=>{e.toolRail.setSelectedOptionId(t.id,!0)}}),n.KeyboardKey.KEY_P,n.InputModifier.Control|n.InputModifier.Shift),a.addString(s,"structureName",{titleAltText:"Structure Name"}),a.addBool(s,"includeEntities",{titleAltText:"Include Entities"}),a.addButton(e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:async()=>{const t=e.extensionContext.player;t.dimension;if(e.extensionContext.selectionManager.selection.isEmpty)return void t.sendMessage("No selection available to fill");const{x:o,y:n,z:i}=e.extensionContext.selectionManager.selection.getBoundingBox().min,{x:r,y:a,z:c}=e.extensionContext.selectionManager.selection.getBoundingBox().max;0!=s.structureName.trim().length&&(t.dimension.runCommandAsync(`structure save ${s.structureName} ${o} ${n} ${i} ${r} ${a} ${c} ${s.includeEntities} disk`),t.sendMessage("Structure Saved."),e.extensionContext.selectionManager.selection.clear())}}),{titleAltText:"Save"}),a.addDivider(),a.addButton(e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:()=>{e.extensionContext.selectionManager.selection.clear()}}),{titleAltText:"Deselect",variant:"secondary"}),t.bindPropertyPane(a),[]}),(e=>{e.log.debug(`Shutting down ${e.extensionContext.extensionInfo.name} extension`)}),{toolGroupId:"structures"}),n.registerEditorExtension("BlocksCounter",(e=>{e.log.debug(`Initializing ${e.extensionContext.extensionInfo.name} extension`);const t=e.toolRail.addTool({displayAltText:"Blocks Counter",tooltipAltText:"",icon:"pack://textures/editor/blocks_counter.png?filtering=point"});e.scratchStorage={currentCursorState:{outlineColor:new r(1,1,0,1),controlMode:n.CursorControlMode.KeyboardAndMouse,targetMode:n.CursorTargetMode.Block,visible:!0,fixedModeDistance:5}};let o={x:0,y:0,z:0};const a=e.createPropertyPane({titleAltText:"Blocks Counter",titleStringId:""}),s=n.bindDataSource(a,{origin:{x:0,y:0,z:0},size:{x:0,y:0,z:0}}),c=(e,t,n,r,a)=>{const s=t.cursorBlockLocation;if(n||r||a)if(!n||r||a)if(!r||n||a){if(a&&!n&&!r)if(e.extensionContext.selectionManager.selection.isEmpty)e.extensionContext.selectionManager.selection.pushVolume({action:i.CompoundBlockVolumeAction.Add,volume:{from:s,to:s}}),o=s;else{const o=e.extensionContext.selectionManager.selection.peekLastVolume().volume,n=i.BlockVolumeUtils.getBoundingBox(o),r=i.Vector.subtract(new i.Vector(t.location.x,t.location.y,t.location.z),new i.Vector(n.min.x,n.min.y,n.min.z));if(!0){const t=Math.ceil(r.y)-1;e.extensionContext.selectionManager.selection.popVolume(),e.extensionContext.selectionManager.selection.pushVolume({action:i.CompoundBlockVolumeAction.Add,volume:{from:{x:n.min.x,y:n.min.y,z:n.min.z},to:{x:n.max.x,y:t,z:n.max.z}}})}}}else e.extensionContext.selectionManager.selection.pushVolume({action:i.CompoundBlockVolumeAction.Add,volume:{from:s,to:s}}),o=s;else if(e.extensionContext.selectionManager.selection.isEmpty)e.extensionContext.selectionManager.selection.pushVolume({action:i.CompoundBlockVolumeAction.Add,volume:{from:s,to:s}}),o=s;else{const t=o;e.extensionContext.selectionManager.selection.popVolume(),e.extensionContext.selectionManager.selection.pushVolume({action:i.CompoundBlockVolumeAction.Add,volume:{from:t,to:s}})}else e.extensionContext.selectionManager.selection.clear(),e.extensionContext.selectionManager.selection.pushVolume({action:i.CompoundBlockVolumeAction.Add,volume:{from:s,to:s}}),o=s},l=e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:()=>{const t=e.extensionContext.cursor.getPosition(),o={location:{x:0,y:0,z:0},direction:new i.Vector(0,0,0),cursorBlockLocation:t,rayHit:!1};c(e,o,!1,!1,!1)}});t.registerKeyBinding(l,n.KeyboardKey.ENTER,n.InputModifier.None);const u=e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:()=>{const t=e.extensionContext.cursor.getPosition(),o={location:{x:0,y:0,z:0},direction:new i.Vector(0,0,0),cursorBlockLocation:t,rayHit:!1};c(e,o,!1,!0,!1)}});t.registerKeyBinding(u,n.KeyboardKey.ENTER,n.InputModifier.Control);const d=e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:()=>{const t=e.extensionContext.cursor.getPosition(),o={location:{x:0,y:0,z:0},direction:new i.Vector(0,0,0),cursorBlockLocation:t,rayHit:!1};c(e,o,!0,!1,!1)}});t.registerKeyBinding(d,n.KeyboardKey.ENTER,n.InputModifier.Shift);const g=e.actionManager.createAction({actionType:n.ActionTypes.MouseRayCastAction,onExecute:(t,o)=>{o.mouseAction===n.MouseActionType.LeftButton&&(o.inputType===n.MouseInputType.ButtonDown?t.rayHit?c(e,t,o.modifiers.shift,o.modifiers.ctrl,o.modifiers.alt):e.extensionContext.selectionManager.selection.clear():(o.inputType,n.MouseInputType.ButtonUp))}});t.registerMouseButtonBinding(g);const x=(t,o,n,r)=>{if(n===r)return;const a=e.extensionContext.selectionManager.selection;if(!a.isEmpty){a.peekLastVolume().volume&&(a.popVolume(),a.pushVolume({action:i.CompoundBlockVolumeAction.Add,volume:{from:s.origin,to:{x:s.origin.x+s.size.x-1,y:s.origin.y+s.size.y-1,z:s.origin.z+s.size.z-1}}}))}},p=a.createPropertyPane({titleAltText:"Transform",titleStringId:""}),y=p.addVector3(s,"origin",{titleAltText:"Origin",enable:!0,minX:Number.MIN_SAFE_INTEGER,minY:Number.MIN_SAFE_INTEGER,minZ:Number.MIN_SAFE_INTEGER,onChange:x}),m=p.addVector3(s,"size",{titleAltText:"Size",enable:!0,minX:1,minY:1,minZ:1,maxX:100,maxY:100,maxZ:100,onChange:x}),T=(e,t)=>{let o=0,n=i.system.run((()=>{if(void 0!==e.extensionContext.selectionManager)if(s){if(o++%5==0){o=0;let t=0,n=0,r=0,a=0,c=0,l=0;const u=e.extensionContext.selectionManager.selection;if(u&&!u.isEmpty){const e=i.BlockVolumeUtils.getBoundingBox(u.peekLastVolume().volume),o=i.BoundingBoxUtils.getSpan(e);t=e.min.x,n=e.min.y,r=e.min.z,a=o.x,c=o.y,l=o.z,y?.enable||y&&(y.enable=!0),m?.enable||m&&(m.enable=!0)}else y?.enable&&y&&(y.enable=!1),m?.enable&&m&&(m.enable=!1);s.origin.x===t&&s.origin.y===n&&s.origin.z===r&&s.size.x===a&&s.size.y===c&&s.size.z===l||(s.origin.x=Math.trunc(t),s.origin.y=Math.trunc(n),s.origin.z=Math.trunc(r),s.size.x=Math.trunc(a),s.size.y=Math.trunc(c),s.size.z=Math.trunc(l))}e.toolRail.selectedOptionId===t.id&&(n=i.system.run((()=>T(e,t))))}else e.log.error("Pane settings object not defined, unable to refresh values for selection.")}))};t.onModalToolActivation.subscribe((o=>{o.isActiveTool&&(e.extensionContext.cursor.setProperties(e.scratchStorage.currentCursorState),T(e,t))}));const h=a.addButton(e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:async()=>{const t=e.extensionContext.player;if(e.extensionContext.selectionManager.selection.isEmpty)return void t.sendMessage("No selection available to fill");h.enable=!1,t.sendMessage("Getting Blocks!");const o=[];await n.executeLargeOperation(e.extensionContext.selectionManager.selection,(e=>{const n=t.dimension.getBlock(e);if(n&&"minecraft:air"!=n.typeId){const e=o.find((e=>e.typeId==n.typeId));e?e.amount++:o.push({typeId:n.typeId,amount:1})}})).catch((()=>{e.extensionContext.selectionManager.selection.clear()})).then((()=>{e.extensionContext.selectionManager.selection.clear();const t=e.createPropertyPane({titleAltText:"Blocks",titleStringId:""}),i=n.bindDataSource(t,{}),r=o.sort(((e,t)=>t.amount-e.amount));for(let e=0;e<o.length;e++){const o=r[e];i[o.typeId]=o.amount;t.createPropertyPane({titleAltText:o.typeId,titleStringId:"tile."+o.typeId.split(":")[1]+".name"}).addNumber(i,o.typeId,{titleAltText:"Amount",showSlider:!1,enable:!1})}t.update(!0),h.enable=!0}))}}),{titleAltText:"Get Blocks"});return a.addDivider(),a.addButton(e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:()=>{e.extensionContext.selectionManager.selection.clear()}}),{titleAltText:"Deselect",variant:"secondary"}),t.bindPropertyPane(a),[]}),(e=>{e.log.debug(`Shutting down ${e.extensionContext.extensionInfo.name} extension`)}),{toolGroupId:"extras"}),n.registerEditorExtension("BlockModifier",(e=>{e.log.debug(`Initializing ${e.extensionContext.extensionInfo.name} extension`);const t=e.toolRail.addTool({displayAltText:"Block Modifier",tooltipAltText:"",icon:"pack://textures/editor/block_modifier.png?filtering=point"});return e.scratchStorage={currentCursorState:{outlineColor:new r(1,1,0,1),controlMode:n.CursorControlMode.KeyboardAndMouse,targetMode:n.CursorTargetMode.Block,visible:!0,fixedModeDistance:5}},t.onModalToolActivation.subscribe((t=>{t.isActiveTool&&e.extensionContext.cursor.setProperties(e.scratchStorage.currentCursorState)})),t.registerMouseButtonBinding(e.actionManager.createAction({actionType:n.ActionTypes.MouseRayCastAction,onExecute:(o,i)=>{i.mouseAction==n.MouseActionType.LeftButton&&i.inputType==n.MouseInputType.ButtonDown&&y(e,t,e.extensionContext.player,e.extensionContext.cursor.getPosition())}})),[]}),(e=>{e.log.debug(`Shutting down ${e.extensionContext.extensionInfo.name} extension`)}),{toolGroupId:"extras"}),n.registerEditorExtension("BlocksReplacer",(e=>{e.log.debug(`Initializing ${e.extensionContext.extensionInfo.name} extension`);const t=e.toolRail.addTool({displayAltText:"Block Replace (Ctrl + R)",tooltipAltText:"",icon:"pack://textures/editor/replace.png?filtering=point"});e.scratchStorage={currentCursorState:{outlineColor:new r(1,1,0,1),controlMode:n.CursorControlMode.KeyboardAndMouse,targetMode:n.CursorTargetMode.Block,visible:!0,fixedModeDistance:5}};let o={x:0,y:0,z:0};const a=e.createPropertyPane({titleAltText:"Block Replace",titleStringId:""}),s=n.bindDataSource(a,{origin:{x:0,y:0,z:0},size:{x:0,y:0,z:0},blockType:"minecraft:stone",replaceWith:"minecraft:stone"}),c=(e,t,n,r,a)=>{const s=t.cursorBlockLocation;if(n||r||a)if(!n||r||a)if(!r||n||a){if(a&&!n&&!r)if(e.extensionContext.selectionManager.selection.isEmpty)e.extensionContext.selectionManager.selection.pushVolume({action:i.CompoundBlockVolumeAction.Add,volume:{from:s,to:s}}),o=s;else{const o=e.extensionContext.selectionManager.selection.peekLastVolume().volume,n=i.BlockVolumeUtils.getBoundingBox(o),r=i.Vector.subtract(new i.Vector(t.location.x,t.location.y,t.location.z),new i.Vector(n.min.x,n.min.y,n.min.z));if(!0){const t=Math.ceil(r.y)-1;e.extensionContext.selectionManager.selection.popVolume(),e.extensionContext.selectionManager.selection.pushVolume({action:i.CompoundBlockVolumeAction.Add,volume:{from:{x:n.min.x,y:n.min.y,z:n.min.z},to:{x:n.max.x,y:t,z:n.max.z}}})}}}else e.extensionContext.selectionManager.selection.pushVolume({action:i.CompoundBlockVolumeAction.Add,volume:{from:s,to:s}}),o=s;else if(e.extensionContext.selectionManager.selection.isEmpty)e.extensionContext.selectionManager.selection.pushVolume({action:i.CompoundBlockVolumeAction.Add,volume:{from:s,to:s}}),o=s;else{const t=o;e.extensionContext.selectionManager.selection.popVolume(),e.extensionContext.selectionManager.selection.pushVolume({action:i.CompoundBlockVolumeAction.Add,volume:{from:t,to:s}})}else e.extensionContext.selectionManager.selection.clear(),e.extensionContext.selectionManager.selection.pushVolume({action:i.CompoundBlockVolumeAction.Add,volume:{from:s,to:s}}),o=s},l=e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:()=>{const t=e.extensionContext.cursor.getPosition(),o={location:{x:0,y:0,z:0},direction:new i.Vector(0,0,0),cursorBlockLocation:t,rayHit:!1};c(e,o,!1,!1,!1)}});t.registerKeyBinding(l,n.KeyboardKey.ENTER,n.InputModifier.None);const u=e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:()=>{const t=e.extensionContext.cursor.getPosition(),o={location:{x:0,y:0,z:0},direction:new i.Vector(0,0,0),cursorBlockLocation:t,rayHit:!1};c(e,o,!1,!0,!1)}});t.registerKeyBinding(u,n.KeyboardKey.ENTER,n.InputModifier.Control);const d=e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:()=>{const t=e.extensionContext.cursor.getPosition(),o={location:{x:0,y:0,z:0},direction:new i.Vector(0,0,0),cursorBlockLocation:t,rayHit:!1};c(e,o,!0,!1,!1)}});t.registerKeyBinding(d,n.KeyboardKey.ENTER,n.InputModifier.Shift);const g=e.actionManager.createAction({actionType:n.ActionTypes.MouseRayCastAction,onExecute:(t,o)=>{o.mouseAction===n.MouseActionType.LeftButton&&(o.inputType===n.MouseInputType.ButtonDown?t.rayHit?c(e,t,o.modifiers.shift,o.modifiers.ctrl,o.modifiers.alt):e.extensionContext.selectionManager.selection.clear():(o.inputType,n.MouseInputType.ButtonUp))}});t.registerMouseButtonBinding(g);const x=(t,o,n,r)=>{if(n===r)return;const a=e.extensionContext.selectionManager.selection;if(!a.isEmpty){a.peekLastVolume().volume&&(a.popVolume(),a.pushVolume({action:i.CompoundBlockVolumeAction.Add,volume:{from:s.origin,to:{x:s.origin.x+s.size.x-1,y:s.origin.y+s.size.y-1,z:s.origin.z+s.size.z-1}}}))}},p=a.createPropertyPane({titleAltText:"Transform",titleStringId:""}),y=p.addVector3(s,"origin",{titleAltText:"Origin",enable:!0,minX:Number.MIN_SAFE_INTEGER,minY:Number.MIN_SAFE_INTEGER,minZ:Number.MIN_SAFE_INTEGER,onChange:x}),m=p.addVector3(s,"size",{titleAltText:"Size",enable:!0,minX:1,minY:1,minZ:1,maxX:100,maxY:100,maxZ:100,onChange:x}),T=(e,t)=>{let o=0,n=i.system.run((()=>{if(void 0!==e.extensionContext.selectionManager)if(s){if(o++%5==0){o=0;let t=0,n=0,r=0,a=0,c=0,l=0;const u=e.extensionContext.selectionManager.selection;if(u&&!u.isEmpty){const e=i.BlockVolumeUtils.getBoundingBox(u.peekLastVolume().volume),o=i.BoundingBoxUtils.getSpan(e);t=e.min.x,n=e.min.y,r=e.min.z,a=o.x,c=o.y,l=o.z,y?.enable||y&&(y.enable=!0),m?.enable||m&&(m.enable=!0)}else y?.enable&&y&&(y.enable=!1),m?.enable&&m&&(m.enable=!1);s.origin.x===t&&s.origin.y===n&&s.origin.z===r&&s.size.x===a&&s.size.y===c&&s.size.z===l||(s.origin.x=Math.trunc(t),s.origin.y=Math.trunc(n),s.origin.z=Math.trunc(r),s.size.x=Math.trunc(a),s.size.y=Math.trunc(c),s.size.z=Math.trunc(l))}e.toolRail.selectedOptionId===t.id&&(n=i.system.run((()=>T(e,t))))}else e.log.error("Pane settings object not defined, unable to refresh values for selection.")}))};return t.onModalToolActivation.subscribe((o=>{o.isActiveTool&&(e.extensionContext.cursor.setProperties(e.scratchStorage.currentCursorState),T(e,t))})),e.inputManager.registerKeyBinding(n.EditorInputContext.GlobalToolMode,e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:()=>{e.toolRail.setSelectedOptionId(t.id,!0)}}),n.KeyboardKey.KEY_R,n.InputModifier.Control),a.addBlockPicker(s,"blockType",{titleAltText:"Block Type"}),a.addBlockPicker(s,"replaceWith",{titleAltText:"Replace With"}),a.addButton(e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:async()=>{const t=e.extensionContext.player,o=t.dimension;e.extensionContext.selectionManager.selection.isEmpty?t.sendMessage("No selection available to fill"):(e.extensionContext.transactionManager.openTransaction("BlockReplacer"),e.extensionContext.transactionManager.trackBlockChangeSelection(e.extensionContext.selectionManager.selection),await n.executeLargeOperation(e.extensionContext.selectionManager.selection,(e=>{const t=o.getBlock(e);t&&(t.isWaterlogged=!1,t?.typeId==s.blockType&&t.setType(s.replaceWith))})).catch((t=>{e.log.error(t),e.extensionContext.transactionManager.discardOpenTransaction()})).then((()=>{e.extensionContext.transactionManager.commitOpenTransaction()})))}}),{titleAltText:"Replace"}),a.addDivider(),a.addButton(e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:()=>{e.extensionContext.selectionManager.selection.clear()}}),{titleAltText:"Deselect",variant:"secondary"}),t.bindPropertyPane(a),[]}),(e=>{e.log.debug(`Shutting down ${e.extensionContext.extensionInfo.name} extension`)}),{toolGroupId:"extras"}),n.registerEditorExtension("NightVision",(e=>{const t=e.createMenu({name:"Night Vision"});return t.addItem({name:"Enable"},e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:()=>e.extensionContext.player.addEffect("night_vision",2e7,{amplifier:1,showParticles:!1})})),t.addItem({name:"Disable"},e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:()=>e.extensionContext.player.removeEffect("night_vision")})),[]}),(e=>{e.log.debug(`Shutting down ${e.extensionContext.extensionInfo.name} extension`)})),n.registerEditorExtension("WorldSettings",(e=>{const t=e.createMenu({name:"World Settings"}),o=t.addItem({name:"Weather"});o.addItem({name:"Clear"},e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:()=>e.extensionContext.player.dimension.setWeather(i.WeatherType.Clear)})),o.addItem({name:"Rain"},e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:()=>e.extensionContext.player.dimension.setWeather(i.WeatherType.Rain)})),o.addItem({name:"Thunder"},e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:()=>e.extensionContext.player.dimension.setWeather(i.WeatherType.Thunder)}));const r=t.addItem({name:"Time"});return r.addItem({name:"Sunrise"},e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:()=>e.extensionContext.player.dimension.runCommand("time set sunrise")})),r.addItem({name:"Day"},e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:()=>e.extensionContext.player.dimension.runCommand("time set day")})),r.addItem({name:"Noon"},e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:()=>e.extensionContext.player.dimension.runCommand("time set noon")})),r.addItem({name:"Sunset"},e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:()=>e.extensionContext.player.dimension.runCommand("time set sunset")})),r.addItem({name:"Night"},e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:()=>e.extensionContext.player.dimension.runCommand("time set night")})),r.addItem({name:"Midnight"},e.actionManager.createAction({actionType:n.ActionTypes.NoArgsAction,onExecute:()=>e.extensionContext.player.dimension.runCommand("time set midnight")})),[]}),(e=>{e.log.debug(`Shutting down ${e.extensionContext.extensionInfo.name} extension`)})),n.registerEditorExtension("PlayerPosition",(e=>{e.log.debug(`Initializing ${e.extensionContext.extensionInfo.name} extension`),e.scratchStorage={isDisposed:!1,latestRunId:-1};const t=e.extensionContext.player;let o=t.location;const r=e.createStatusBarItem(n.EditorStatusBarAlignment.Left,30),a=e.createStatusBarItem(n.EditorStatusBarAlignment.Right,30);let s=0;const c=()=>{var n,l;s++%5==0&&(n=t.location,l=o,n.x!==l.x||n.y!==l.y||n.z!==l.z)&&(s=0,o=t.location,r.text=`Position: (${Math.floor(o.x)} / ${Math.floor(o.y)} / ${Math.floor(o.z)})`,a.text=`Dimension: ${m[t.dimension.id]}`),e.scratchStorage&&!e.scratchStorage.isDisposed&&(e.scratchStorage.latestRunId=i.system.run(c))};return e.scratchStorage.latestRunId=i.system.run(c),[]}),(e=>{e.scratchStorage&&-1!==e.scratchStorage.latestRunId&&(e.scratchStorage.isDisposed=!0,i.system.clearRun(e.scratchStorage.latestRunId)),e.log.debug(`Shutting down ${e.extensionContext.extensionInfo.name} extension`)}));